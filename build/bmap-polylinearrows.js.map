{"version":3,"file":"bmap-polylinearrows.js","sources":["../src/utils/defaultValue.js","../src/core/PolylineArrows.js"],"sourcesContent":["/**\n * Returns the first parameter if not undefined, otherwise the second parameter.\n * Useful for setting a default value for a parameter.\n *\n * @function\n *\n * @param {*} a\n * @param {*} b\n * @returns {*} Returns the first parameter if not undefined, otherwise the second parameter.\n *\n * @example\n * param = Cesium.defaultValue(param, 'default');\n */\n function defaultValue(a, b) {\n    if (a !== undefined && a !== null) {\n      return a;\n    }\n    return b;\n  }\n  \n  /**\n   * A frozen empty object that can be used as the default value for options passed as\n   * an object literal.\n   * @type {Object}\n   * @memberof defaultValue\n   */\n  defaultValue.EMPTY_OBJECT = Object.freeze({});\n  \n  export default defaultValue;","import defaultValue from '../utils/defaultValue';\n\nclass PolylineArrows {\n    constructor(mapType, map, data, icon, opts = {}) {\n        // 参数\n        this.mapType = mapType;\n        this.map = map\n        this.data = data;\n        this.icon = icon;\n        this.step = defaultValue(opts.step, 90);\n        this.iconSize = defaultValue(opts.iconSize, { x: 12, y: 12 });\n        this.correctAngle = defaultValue(opts.correctAngle, 0);\n\n        // 私有变量\n        this.lines = [];\n        this.arrowOverlays = [];\n        this.arrowGeojsonArr = [];\n        this.moveendHandlerFunc = null;\n        this.zoomendHandlerFunc = null;\n\n        this.parseLineData();\n        this.initRefreshEvent();\n    }\n\n    /**\n     * 解析线路数据\n     */\n    parseLineData() {\n        let geo = this.data.geometry;\n        if (!geo) return;\n\n        let { type } = geo;\n        switch (type) {\n            case 'LineString':\n                this.lines = geo.coordinates;\n                break;\n            case 'MultiLineString':\n                this.lines = geo.coordinates.flat();\n                break;\n            default:\n                console.error('error polyline data!');\n                break;\n        }\n    }\n\n    /**\n     * 初始化箭头更新事件\n     * 地图平移和缩放结束时触发\n     */\n    initRefreshEvent() {\n        this.moveendHandlerFunc = this.moveendHandler.bind(this);\n        this.zoomendHandlerFunc = this.zoomendHandler.bind(this);\n\n        if (this.lines && this.lines.length > 1) {\n            this.map.addEventListener('moveend', this.moveendHandlerFunc);\n            this.map.addEventListener('zoomend', this.zoomendHandlerFunc);\n        }\n    }\n\n    /**\n     * 地图平移结束事件处理\n     */\n    moveendHandler() {\n        this.dispatchArrows();\n    }\n\n    /**\n     * 地图缩放结束事件处理\n     */\n    zoomendHandler() {\n        this.dispatchArrows();\n    }\n\n    /**\n    * 箭头绘制调度中心\n    */\n    dispatchArrows() {\n        let that = this;\n\n        // 每次更新前先清空所有箭头数据\n        that.clearArrows();\n\n        let step = that.step;\n        let sylength = 0;\n        let currrentLength = 0;\n        let currentStart = that.pointToPixel(that.lines[0][0], that.lines[0][1]);\n        let arrowNode = {};\n        that.lines.map((val, index) => {\n            if (index !== that.lines.length - 1) {\n                let start = that.pointToPixel(val[0], val[1]);\n                let end = that.pointToPixel(that.lines[index + 1][0], that.lines[index + 1][1]);\n                let [dx, dy] = [end.x - start.x, start.y - end.y];\n                if (dx !== 0 || dy !== 0) {\n                    // 都为0意味着折线中节点太近，忽略这段距离\n                    let rotation = Math.atan2(dy, dx);\n                    let nodeDistance;\n                    if (rotation === 0) {\n                        nodeDistance = dx;\n                    } else {\n                        nodeDistance = dy / Math.sin(rotation);\n                    }\n\n                    if (Number(nodeDistance) < Number(step - currrentLength)) {\n                        // 间距过短\n                        currrentLength += nodeDistance;\n                        currentStart = end;\n                    } else {\n                        if (currrentLength == 0) {\n                            sylength = nodeDistance % step;\n                            let splitNum = Math.floor(nodeDistance / step);\n                            let Y = -Math.sin(rotation) * step;\n                            let X = Math.cos(rotation) * step;\n                            for (let i = 0; i < splitNum; i++) {\n                                arrowNode.x = currentStart.x + X;\n                                arrowNode.y = currentStart.y + Y;\n                                currentStart = arrowNode;\n\n                                that.addArrow(arrowNode, rotation);\n                            }\n                            currrentLength = sylength;\n                            currentStart = end;\n                        } else {\n                            let littleStep = step - currrentLength;\n                            let Y = -Math.sin(rotation) * littleStep;\n                            let X = Math.cos(rotation) * littleStep;\n                            arrowNode.x = currentStart.x + X;\n                            arrowNode.y = currentStart.y + Y;\n                            currentStart = arrowNode;\n\n                            that.addArrow(arrowNode, rotation);\n\n                            sylength = (nodeDistance - littleStep) % step;\n                            let splitNum = Math.floor((nodeDistance - littleStep) / step);\n                            Y = -Math.sin(rotation) * step;\n                            X = Math.cos(rotation) * step;\n                            for (let i = 0; i < splitNum; i++) {\n                                arrowNode.x = currentStart.x + X;\n                                arrowNode.y = currentStart.y + Y;\n                                currentStart = arrowNode;\n\n                                that.addArrow(arrowNode, rotation);\n                            }\n                            currrentLength = sylength;\n                            currentStart = end;\n                        }\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * 新增箭头\n     * @param arrowNode 箭头对象\n     * @param rotation 旋转角度\n     */\n    addArrow(arrowNode, rotation) {\n        let seeExtent = this.map.getBounds();\n        let arrowPoint = this.pixelToPoint(arrowNode.x, arrowNode.y);\n\n        // 仅在屏幕可视区域内加载\n        if (seeExtent.containsPoint(arrowPoint)) {\n            let currrentAngle = (rotation / Math.PI) * 180 - this.correctAngle;\n            this.drawArrow(arrowPoint, -currrentAngle);\n        }\n    }\n\n\n    /**\n     * 使用百度地图API绘制箭头\n     * @param arrowPoint 箭头像素坐标\n     * @param rotation 旋转角度\n     */\n    drawArrow(arrowPoint, rotation) {\n        let marker = this.createMarker(arrowPoint);\n        marker.setRotation(rotation);\n\n        this.map.addOverlay(marker);\n        this.arrowOverlays.push(marker);\n    }\n\n\n    /**\n     * 清除箭头\n     */\n    clearArrows() {\n        this.arrowOverlays.forEach((overlay) => {\n            this.map.removeOverlay(overlay);\n        });\n\n        this.arrowOverlays = [];\n    }\n\n    /**\n     * 设置箭头可见性\n     * @param visible 可见性\n     */\n    setArrowsVisible(visible) {\n        this.arrowOverlays.forEach((overlay) => {\n            if (visible) {\n                overlay.show();\n            } else {\n                overlay.hide();\n            }\n        });\n    }\n\n    /**\n     * 更新箭头数据\n     * @param newData 新箭头数据\n     */\n    updateData(newData) {\n        this.data = newData;\n        this.parseLineData();\n        this.clearArrows();\n        this.dispatchArrows();\n    }\n\n    /**\n     * 经纬度坐标转屏幕坐标\n     * @param lng 经度\n     * @param lat 纬度\n     */\n    pointToPixel(lng, lat) {\n        let pixel;\n        switch (this.mapType) {\n            case 'BMap':\n                pixel = this.map.pointToPixel(new BMap.Point(lng, lat));\n                break;\n            case 'BMapGL':\n                pixel = this.map.pointToPixel(new BMapGL.Point(lng, lat));\n                break;\n            default:\n                console.log(`请输入正确的地图构造函数：['BMap','BMapGL']中的一种！`);\n                break;\n        }\n\n        return pixel;\n    }\n\n    /**\n    * 屏幕坐标转经纬度坐标\n    * @param x 屏幕坐标x\n    * @param y 屏幕坐标y\n    */\n    pixelToPoint(x, y) {\n        let point;\n        switch (this.mapType) {\n            case 'BMap':\n                point = this.map.pixelToPoint(new BMap.Pixel(x, y));\n                break;\n            case 'BMapGL':\n                point = this.map.pixelToPoint(new BMapGL.Pixel(x, y));\n                break;\n            default:\n                console.log(`请输入正确的地图构造函数：['BMap','BMapGL']中的一种！`);\n                break;\n        }\n\n        return point;\n    }\n\n    /**\n     * 创建marker\n     * @param icon 图标\n     * @param point 坐标点\n     */\n    createMarker(point) {\n        let myIcon;\n        let marker;\n        switch (this.mapType) {\n            case 'BMap':\n                myIcon = new BMap.Icon(this.icon, new BMap.Size(this.iconSize.x, this.iconSize.y));\n                marker = new BMap.Marker(point, {\n                    icon: myIcon,\n                });\n                break;\n            case 'BMapGL':\n                myIcon = new BMapGL.Icon(this.icon, new BMapGL.Size(this.iconSize.x, this.iconSize.y));\n                marker = new BMapGL.Marker(point, {\n                    icon: myIcon,\n                });\n                break;\n            default:\n                console.log(`请输入正确的地图构造函数：['BMap','BMapGL']中的一种！`);\n                break;\n        }\n\n        return marker;\n    }\n\n    /**\n    * 析构函数\n    */\n    destory() {\n        this.clearArrows();\n\n        this.map.removeEventListener('moveend', this.moveendHandlerFunc);\n        this.map.removeEventListener('zoomend', this.zoomendHandlerFunc);\n    }\n}\n\nexport default PolylineArrows;"],"names":["defaultValue","a","b","undefined","EMPTY_OBJECT","Object","freeze","PolylineArrows","mapType","map","data","icon","opts","step","iconSize","x","y","correctAngle","lines","arrowOverlays","arrowGeojsonArr","moveendHandlerFunc","zoomendHandlerFunc","parseLineData","initRefreshEvent","geo","geometry","type","coordinates","flat","console","error","moveendHandler","bind","zoomendHandler","length","addEventListener","dispatchArrows","that","clearArrows","sylength","currrentLength","currentStart","pointToPixel","arrowNode","val","index","start","end","dx","dy","rotation","Math","atan2","nodeDistance","sin","Number","splitNum","floor","Y","X","cos","i","addArrow","littleStep","seeExtent","getBounds","arrowPoint","pixelToPoint","containsPoint","currrentAngle","PI","drawArrow","marker","createMarker","setRotation","addOverlay","push","forEach","overlay","removeOverlay","visible","show","hide","newData","lng","lat","pixel","BMap","Point","BMapGL","log","point","Pixel","myIcon","Icon","Size","Marker","removeEventListener"],"mappings":"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"}